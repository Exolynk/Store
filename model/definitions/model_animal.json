{
  "uuid": "20d64c50-3328-4eca-ac6f-9b4038356471",
  "ident": "animal",
  "version": {
    "typ": "version",
    "kind": "Number",
    "version": "15"
  },
  "status": "draft",
  "name": {
    "typ": "language",
    "langs": [
      [
        "de",
        "Igel"
      ],
      [
        "en",
        "Hedgehog"
      ]
    ]
  },
  "description": {
    "typ": "language",
    "langs": [
      [
        "de",
        "Igel"
      ],
      [
        "en",
        "Hedgehog"
      ]
    ]
  },
  "icon": "stethoscope",
  "layout": "<record>\n    <!-- One-Page-Form -->\n    <tab name=\"Informationen\" active=\"true\" status=\"\">\n        \n        <!--\n        <data name=\"Finder Phone\" collapsed=\"false\" record=\"finder_reference\">\n            <variable ident=\"contact_phone\" />\n        </data>\n        -->\n        \n        <data name=\"Finder\" collapsed=\"false\" status=\"registered\">\n            <variable ident=\"finder_reference\" access=\"write\" />\n            <link workflow=\"add_contact\" name=\"Neuer Kontakt erstellen\" />\n            <link name=\" | \" />\n            <link name=\"Kontakte bearbeiten\" link=\"#/search?search[models][0]=contact&view=Table&tab=Kontakt+Informationen&cols=contact_firstname+contact_lastname+contact_phone_1+contact_phone_2+release_experience_bool+contact_category+&model=contact\" />\n        </data>\n        <!-- Collapsed if under_treatment -->\n        <data name=\"Finder\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done,released\">\n            <variable ident=\"finder_reference\" access=\"write\" />\n            <link workflow=\"add_contact\" name=\"Neuer Kontakt erstellen\" />\n            <link name=\" | \" />\n            <link name=\"Kontakte bearbeiten\" link=\"#/search?search[models][0]=contact&view=Table&tab=Kontakt+Informationen&cols=contact_firstname+contact_lastname+contact_phone_1+contact_phone_2+release_experience_bool+contact_category+&model=contact\" />\n        </data>\n\n        <data name=\"Fundort und Datum\" collapsed=\"false\" status=\"registered\">\n            <variable ident=\"date_found\" access=\"write\" />\n            <variable ident=\"can_return_bool\" access=\"write\" />\n            <raw-html>\n                <p style=\"color:#E78C07; font-size:14px; margin-bottom:-20px; margin-top:-2px;\"><ui5-icon name=\"information\" style=\"color:#E78C07; font-size:14px;\"> </ui5-icon><strong> Wichtig! </strong>Bei Igeln die stationär aufgenommen werden, unbedingt Fundort notieren, damit der Igel, als ortstreues Tier, nach abgeschlossener Behandlung wieder dorthin zurückgebracht werden kann.</p>\n            </raw-html>\n            <variable ident=\"spot_found\" access=\"write\" />\n        </data>\n        <!-- Collapsed if under_treatment -->\n        <data name=\"Fundort und Datum\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done,released\">\n            <variable ident=\"date_found\" access=\"write\" />\n            <variable ident=\"can_return_bool\" access=\"write\" />\n            <raw-html>\n                <p style=\"color:#E78C07; font-size:14px; margin-bottom:-20px; margin-top:-2px;\"><ui5-icon name=\"information\" style=\"color:#E78C07; font-size:14px;\"> </ui5-icon><strong> Wichtig! </strong>Bei Igeln die stationär aufgenommen werden, unbedingt Fundort notieren, damit der Igel, als ortstreues Tier, nach abgeschlossener Behandlung wieder dorthin zurückgebracht werden kann.</p>\n            </raw-html>\n            <variable ident=\"spot_found\" access=\"write\" />\n        </data>\n        \n        <data name=\"Igel Informationen\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done,released\">\n            <variable ident=\"name\" access=\"write\" />\n            <variable ident=\"ident\" access=\"read\" />\n            <variable ident=\"description\" access=\"write\" />\n            <variable ident=\"gender_select\" access=\"write\" />\n            <!--<variable ident=\"box_select\" access=\"write\" />-->\n            <variable name=\"Wannen Nummer\" workflow=\"box_selection_dyn\" access=\"write\" />\n            <variable ident=\"hospitalisation_reason_string\" access=\"write\" />\n            <variable ident=\"entry_weight\" access=\"write\" />\n            <variable ident=\"calendar_start\" name=\"In Station aufgenommen am\" access=\"write\" />\n            <raw-html>\n                <br>\n                <nobr><p style=\"color:#556B82; font-size:14px; margin-bottom:-20px; margin-top:-2px;\"> Gewichtszunahme/-abnahme zwischen den zwei letzten Wägungen:</p></nobr>\n            </raw-html>\n            <variable workflow=\"dyn_delta_weight\" access=\"read\" />\n            <variable ident=\"calendar_start\" name=\"Aufgenommen am\" access=\"write\" />\n            <!--<variable ident=\"vet_consultation_bool\" access=\"write\" />-->\n        </data>\n        \n        <data name=\"Pflegeprotokoll\" collapsed=\"false\" status=\"under_treatment,daycare_open,daycare_done\">\n            <link workflow=\"add_drug\" name=\"Neues Medikament erfassen\" />\n            <link name=\" | \" />\n            <link name=\"Medikamente bearbeiten\" link=\"#/search?search[models][0]=drugs&view=Table&tab=Informationen&cols=name+category_selection+application_selection+existing_integer+&model=drugs\" />\n            <variable ident=\"daycare_table\" access=\"write\" />\n        </data>\n        \n        <!-- Collapsed if released -->\n        <data name=\"Tagesprotokoll\" collapsed=\"true\" status=\"released\">\n            <variable ident=\"daycare_table\" access=\"write\" />\n        </data>\n                \n        <data name=\"Tierarzt Konsultation\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done\">\n            <variable ident=\"vet_consultation_bool\" access=\"write\" />\n            <variable ident=\"vet_consultation_reference\" access=\"write\" />\n        </data>\n        \n        <data name=\"Angehängte Dateien\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done\">\n            <variable ident=\"file_reference_list\" />\n            <raw-html><br/></raw-html>\n            <link name=\"Alle bereits hochgeladenen Dateien bearbeiten\" link=\"#/search?search[models][0]=file&view=Tree&model=file\" />\n        </data>\n        <files variable=\"file_reference_list\" status=\"under_treatment,daycare_open,daycare_done\"/>\n        \n        <data name=\"Austritt\" collapsed=\"false\" status=\"released\">\n            <variable ident=\"discharge_reason_selection\" access=\"write\" />\n            <variable ident=\"calendar_end\" name=\"Austritt am\" access=\"write\" />\n            <variable ident=\"discharge_notes\" access=\"write\" />\n            <variable ident=\"enclosure_lent_bool\" access=\"write\" />\n        </data>\n        <data name=\"Auswilderung\" collapsed=\"true\" status=\"released\">\n            <variable ident=\"releaser_reference\" access=\"write\" />\n            <link workflow=\"add_contact\" name=\"Neuer Kontakt erstellen\" />\n            <link name=\" | \" />\n            <link name=\"Kontakte bearbeiten\" link=\"#/search?search[models][0]=contact&view=Table&tab=Kontakt+Informationen&cols=contact_firstname+contact_lastname+contact_phone_1+contact_phone_2+release_experience_bool+contact_category+&model=contact\" />\n        </data>\n        <data name=\"Igelfamilie\" collapsed=\"true\" status=\"under_treatment,daycare_open,daycare_done\">\n            <variable ident=\"children\" name=\"Igelfamilie\" access=\"write\" />\n        </data>\n        <data name=\"Einstellungen\" collapsed=\"true\">\n            <!-- <variable ident=\"record_invisible_bool\" access=\"write\" /> -->\n            <raw-html>\n                <br>\n                <p style=\"color:#E78C07;\"><ui5-icon name=\"information\" style=\"color:#E78C07;\"></ui5-icon> Achtung: bei manueller Statusänderung hier wird Farbe nicht gesetzt!</p>\n            </raw-html>\n            <variable ident=\"status\" access=\"write\" />\n            <variable ident=\"ident\" access=\"write\" />\n            <!--<variable ident=\"access_right\" access=\"write\" />-->\n            <!--<variable ident=\"enclosure_lent_bool\" access=\"write\" />-->\n        </data>\n    </tab>\n    \n    <!-- Tab Dokumentation -->    \n    <tab name=\"Dokumentation\">\n        <data name=\"Dokumentation\" collapsed=\"false\">\n            <raw-html>\n                <p style=\"color:#E78C07; font-size:14px; margin-bottom:-20px; margin-top:-2px;\"><strong> Wichtig! </strong>Nach jeder Änderung mit dem <ui5-icon name=\"save\" style=\"color:#E78C07; font-size:14px;\"> </ui5-icon> Button speichern.</p>\n            </raw-html>\n            <variable ident=\"documentation_string\" access=\"write\" />\n        </data>\n    </tab>\n    \n    <!-- Tab Verlauf/Historie -->    \n    <tab name=\"Verlauf/Historie\">\n        <record-logs />\n    </tab>\n    \n</record>",
  "variables": [
    {
      "ident": "applied_treatments",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Behandlungen"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Angewendete Behandlungen"
          ]
        ]
      },
      "value": {
        "List": {
          "typ": "list",
          "data": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "List": {
          "restrict_value": {
            "Reference": "00000000-0000-0000-0000-000000000000"
          },
          "restrict_setting": {
            "Reference": {
              "typ": {
                "RecordTyp": "treatments"
              }
            }
          },
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "diagnosis_select",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Diagnosis Selection"
          ],
          [
            "de",
            "Diagnose Auswahl"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Diagnose Selection"
          ],
          [
            "de",
            "Diagnose Auswahl"
          ]
        ]
      },
      "value": {
        "List": {
          "typ": "list",
          "data": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "List": {
          "restrict_value": {
            "Reference": "00000000-0000-0000-0000-000000000000"
          },
          "restrict_setting": {
            "Reference": {
              "typ": {
                "RecordTyp": "diagnosis_elements"
              }
            }
          },
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "diagnosis_text",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Diagnose"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Diagnose Freitext"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "String": {
          "typ": "Singleline"
        }
      }
    },
    {
      "ident": "diagnosis_initial_creator",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Erstdiagnose erstellt von"
          ],
          [
            "en",
            "Initial diagnosis by"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Creator of initial diagnosis"
          ],
          [
            "de",
            "Ersteler:in der Erstdiagnose"
          ]
        ]
      },
      "value": {
        "Reference": "00000000-0000-0000-0000-000000000000"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Reference": {
          "typ": {
            "RecordTyp": "user"
          }
        }
      }
    },
    {
      "ident": "release_to_wilderness_color",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Animal released into wilderness"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Animal released into wilderness"
          ]
        ]
      },
      "value": {
        "Color": {
          "typ": "color",
          "color": "#2B7D2B"
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "spot_found",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Location found"
          ],
          [
            "de",
            "Fundort"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Location found"
          ],
          [
            "de",
            "Fundort"
          ]
        ]
      },
      "value": {
        "Location": {
          "typ": "location",
          "house_number": "",
          "road": "",
          "town": "",
          "state": "",
          "postcode": "",
          "country": "",
          "lat": 0.0,
          "lon": 0.0,
          "validated": false
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "age_select",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Age"
          ],
          [
            "de",
            "Alter"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Age"
          ],
          [
            "de",
            "Alter"
          ]
        ]
      },
      "value": {
        "Selection": {
          "typ": "selection",
          "selected": [],
          "options": {}
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Selection": {
          "mode": "Single",
          "options": {
            "juvenil": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Juvenile"
                ],
                [
                  "de",
                  "Juvenil"
                ]
              ]
            },
            "infant": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Infant"
                ],
                [
                  "de",
                  "Säugling"
                ]
              ]
            },
            "adult": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Adult"
                ],
                [
                  "de",
                  "Adult"
                ]
              ]
            }
          },
          "change_target": "Settings"
        }
      }
    },
    {
      "ident": "entry_weight",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Entry weight [g]"
          ],
          [
            "de",
            "Gewicht Eintritt [g]"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Entry weight [g]"
          ],
          [
            "de",
            "Gewicht Eintritt [g]"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "notes",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Notes"
          ],
          [
            "de",
            "Bemerkungen"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Notes"
          ],
          [
            "de",
            "Bemerkungen"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "String": {
          "typ": "Singleline"
        }
      }
    },
    {
      "ident": "releaser_reference",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Releaser"
          ],
          [
            "de",
            "AuswilderIn"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Releaser"
          ],
          [
            "de",
            "AuswilderIn"
          ]
        ]
      },
      "value": {
        "Reference": "00000000-0000-0000-0000-000000000000"
      },
      "required": false,
      "access": "Read",
      "gdpr": "",
      "settings": {
        "Reference": {
          "typ": {
            "RecordTyp": "contact"
          }
        }
      }
    },
    {
      "ident": "discharge_reason_selection",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Discharge Reason"
          ],
          [
            "de",
            "Austrittsgrund"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Discharge Reason"
          ],
          [
            "de",
            "Austrittsgrund"
          ]
        ]
      },
      "value": {
        "Selection": {
          "typ": "selection",
          "selected": [],
          "options": {}
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Selection": {
          "mode": "Single",
          "options": {
            "exitus": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Exitus"
                ],
                [
                  "de",
                  "Exitus"
                ]
              ]
            },
            "recovered": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Recovered"
                ],
                [
                  "de",
                  "Erholt"
                ]
              ]
            },
            "euthanasia": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Euthanasia"
                ],
                [
                  "de",
                  "Euthanasie"
                ]
              ]
            }
          },
          "change_target": "Settings"
        }
      }
    },
    {
      "ident": "discharge_notes",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Discharge notes"
          ],
          [
            "de",
            "Austrittsbemerkungen"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Discharge notes"
          ],
          [
            "de",
            "Austrittsbemerkungen"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "String": {
          "typ": "Singleline"
        }
      }
    },
    {
      "ident": "vet_consultation_bool",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsulation"
          ],
          [
            "en",
            "Vet consultation"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsulation"
          ],
          [
            "en",
            "Vet consultation"
          ]
        ]
      },
      "value": {
        "Bool": false
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "gender_select",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Gender"
          ],
          [
            "de",
            "Geschlecht"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Gender"
          ],
          [
            "de",
            "Geschlecht"
          ]
        ]
      },
      "value": {
        "Selection": {
          "typ": "selection",
          "selected": [],
          "options": {}
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Selection": {
          "mode": "Single",
          "options": {
            "female": {
              "typ": "language",
              "langs": [
                [
                  "de",
                  "weiblich"
                ],
                [
                  "en",
                  "female"
                ]
              ]
            },
            "male": {
              "typ": "language",
              "langs": [
                [
                  "de",
                  "männlich"
                ],
                [
                  "en",
                  "male"
                ]
              ]
            }
          },
          "change_target": "Settings"
        }
      }
    },
    {
      "ident": "hospitalisation_reason_string",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Grund der Aufnahme, Zustand des Igels"
          ],
          [
            "en",
            "Reason for Hospitalisation, Condition of animal"
          ],
          [
            "fr",
            "Motif de l'hospitalisation, état de l'animal"
          ],
          [
            "it",
            "Motivo del ricovero, condizioni dell'animale"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Grund der Aufnahme, Zustand des Igels"
          ],
          [
            "en",
            "Reason for Hospitalisation, Condition of animal"
          ],
          [
            "fr",
            "Motif de l'hospitalisation, état de l'animal"
          ],
          [
            "it",
            "Motivo del ricovero, condizioni dell'animale"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "String": {
          "typ": "Singleline"
        }
      }
    },
    {
      "ident": "diagnosis_table",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Diagnose"
          ],
          [
            "en",
            "Diagnosis"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Diagnose"
          ],
          [
            "en",
            "Diagnosis"
          ]
        ]
      },
      "value": {
        "Table": {
          "typ": "table",
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Table": {
          "columns": [
            {
              "ident": "date",
              "position": 0,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Datum"
                  ],
                  [
                    "en",
                    "Date"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
              },
              "setting": "None"
            },
            {
              "ident": "diagnosis",
              "position": 1,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Diagnose"
                  ],
                  [
                    "en",
                    "Diagnosis"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": {
                "String": {
                  "typ": "Singleline"
                }
              }
            }
          ],
          "add_row_only": false,
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "drugs_table",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Medikamente"
          ],
          [
            "en",
            "Drugs"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Medikamente"
          ],
          [
            "en",
            "Drugs"
          ]
        ]
      },
      "value": {
        "Table": {
          "typ": "table",
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Table": {
          "columns": [
            {
              "ident": "date",
              "position": 0,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Datum"
                  ],
                  [
                    "en",
                    "Zeit"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
              },
              "setting": "None"
            },
            {
              "ident": "drugs",
              "position": 1,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Medikamente"
                  ],
                  [
                    "en",
                    "Drugs"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": {
                "Reference": {
                  "typ": {
                    "RecordTyp": "drugs"
                  }
                }
              }
            },
            {
              "ident": "remark",
              "position": 2,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Bemerkung"
                  ],
                  [
                    "en",
                    "Remark"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": "None"
            },
            {
              "ident": "user",
              "position": 3,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Benutzer"
                  ],
                  [
                    "en",
                    "User"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": {
                "Reference": {
                  "typ": {
                    "RecordTyp": "user"
                  }
                }
              }
            }
          ],
          "add_row_only": false,
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "date_found",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Funddatum und Uhrzeit"
          ],
          [
            "en",
            "Date and time found"
          ],
          [
            "fr",
            "Date et heure de découverte"
          ],
          [
            "it",
            "Data e ora trovate"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Date found"
          ],
          [
            "de",
            "Datum des Fundes"
          ]
        ]
      },
      "value": {
        "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "box_select",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Box Nummer"
          ],
          [
            "en",
            "Box Number"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Box Nummer"
          ],
          [
            "en",
            "Box Number"
          ]
        ]
      },
      "value": {
        "Selection": {
          "typ": "selection",
          "selected": [
            "-"
          ],
          "options": {}
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Selection": {
          "mode": "Single",
          "options": {
            "29": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "29"
                ]
              ]
            },
            "7": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "7"
                ]
              ]
            },
            "4": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "4"
                ]
              ]
            },
            "16": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "16"
                ]
              ]
            },
            "01": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "1"
                ]
              ]
            },
            "21": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "21"
                ]
              ]
            },
            "19": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "19"
                ]
              ]
            },
            "18": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "18"
                ]
              ]
            },
            "10": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "10"
                ]
              ]
            },
            "27": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "27"
                ]
              ]
            },
            "15": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "15"
                ]
              ]
            },
            "20": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "20"
                ]
              ]
            },
            "14": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "14"
                ]
              ]
            },
            "30": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "30"
                ]
              ]
            },
            "6": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "6"
                ]
              ]
            },
            "9": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "9"
                ]
              ]
            },
            "5": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "5"
                ]
              ]
            },
            "28": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "28"
                ]
              ]
            },
            "03": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "3"
                ]
              ]
            },
            "22": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "22"
                ]
              ]
            },
            "13": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "13"
                ]
              ]
            },
            "12": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "12"
                ]
              ]
            },
            "11": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "11"
                ]
              ]
            },
            "25": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "25"
                ]
              ]
            },
            "24": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "24"
                ]
              ]
            },
            "02": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "02"
                ]
              ]
            },
            "26": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "26"
                ]
              ]
            },
            "-": {
              "typ": "language",
              "langs": [
                [
                  "de",
                  "-"
                ],
                [
                  "en",
                  "-"
                ],
                [
                  "fr",
                  "-"
                ],
                [
                  "it",
                  "-"
                ]
              ]
            },
            "23": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "23"
                ]
              ]
            },
            "17": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "17"
                ]
              ]
            },
            "8": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "8"
                ]
              ]
            }
          },
          "change_target": "Settings"
        }
      }
    },
    {
      "ident": "enclosure_lent_bool",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen"
          ],
          [
            "en",
            "Enclosure lent"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen"
          ],
          [
            "en",
            "Enclosure lent"
          ]
        ]
      },
      "value": {
        "Bool": false
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "file_reference_list",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Dateien"
          ],
          [
            "en",
            "Files"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Dateien"
          ],
          [
            "en",
            "Files"
          ]
        ]
      },
      "value": {
        "List": {
          "typ": "list",
          "data": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "List": {
          "restrict_value": {
            "Reference": "00000000-0000-0000-0000-000000000000"
          },
          "restrict_setting": {
            "Reference": {
              "typ": {
                "RecordTyp": "file"
              }
            }
          },
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "date_released",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Ausgewildert am"
          ],
          [
            "en",
            "Release date"
          ],
          [
            "fr",
            "Remis en liberté le"
          ],
          [
            "it",
            "Pubblicato il"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Ausgewildert am"
          ],
          [
            "en",
            "Release date"
          ],
          [
            "fr",
            "Remis en liberté le"
          ],
          [
            "it",
            "Pubblicato il"
          ]
        ]
      },
      "value": {
        "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "DateTime": {
          "mode": "Date"
        }
      }
    },
    {
      "ident": "diagnosis_initial_date",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Date of initial diagnosis"
          ],
          [
            "de",
            "Datum der Erstdiagnose"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Date of initial diagnosis"
          ],
          [
            "de",
            "Datum der Erstdiagnose"
          ]
        ]
      },
      "value": {
        "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "DateTime": {
          "mode": "Date"
        }
      }
    },
    {
      "ident": "can_return_bool",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Kann zurück"
          ],
          [
            "en",
            "Can return"
          ],
          [
            "fr",
            "Peut revenir"
          ],
          [
            "it",
            "Peut revenir"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Kann zurück"
          ],
          [
            "en",
            "Can return"
          ],
          [
            "fr",
            "Peut revenir"
          ],
          [
            "it",
            "Può ritornare"
          ]
        ]
      },
      "value": {
        "Bool": true
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": "None"
    },
    {
      "ident": "finder_reference",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Contact / Finder"
          ],
          [
            "de",
            "Kontakt / FinderIn"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Contact / Finder"
          ],
          [
            "de",
            "Kontakt / FinderIn"
          ]
        ]
      },
      "value": {
        "Reference": "00000000-0000-0000-0000-000000000000"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Reference": {
          "typ": {
            "RecordTyp": "contact"
          }
        }
      }
    },
    {
      "ident": "daycare_table",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Daycare"
          ],
          [
            "de",
            "Pflegeprotokoll"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Daycare"
          ],
          [
            "de",
            "Pflegeprotokoll"
          ]
        ]
      },
      "value": {
        "Table": {
          "typ": "table",
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Table": {
          "columns": [
            {
              "ident": "date",
              "position": 0,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "en",
                    "Date"
                  ],
                  [
                    "de",
                    "Datum"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Datetime": "1970-01-01 00:00:00.0 +00:00:00"
              },
              "setting": {
                "DateTime": {
                  "mode": "Date"
                }
              }
            },
            {
              "ident": "weight",
              "position": 1,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "en",
                    "Weight [g]"
                  ],
                  [
                    "de",
                    "Gewicht [g]"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": "None"
            },
            {
              "ident": "treatment",
              "position": 2,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Medikamente"
                  ],
                  [
                    "en",
                    "Medication"
                  ],
                  [
                    "fr",
                    "Médicaments"
                  ],
                  [
                    "it",
                    "Farmaci"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": {
                "Reference": {
                  "typ": {
                    "RecordTyp": "drugs"
                  }
                }
              }
            },
            {
              "ident": "remark",
              "position": 5,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "en",
                    "Remark"
                  ],
                  [
                    "de",
                    "Bemerkung"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": {
                "String": {
                  "typ": "Singleline"
                }
              }
            },
            {
              "ident": "kt",
              "position": 4,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Kot Proben"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": {
                "String": {
                  "typ": "Singleline"
                }
              }
            },
            {
              "ident": "dosage",
              "position": 3,
              "name": {
                "typ": "language",
                "langs": [
                  [
                    "de",
                    "Menge"
                  ],
                  [
                    "en",
                    "Dosage"
                  ],
                  [
                    "fr",
                    "Dose"
                  ],
                  [
                    "it",
                    "Dosaggio"
                  ]
                ]
              },
              "read_only": false,
              "value": {
                "String": ""
              },
              "setting": "None"
            }
          ],
          "add_row_only": false,
          "add_at_bottom": false
        }
      }
    },
    {
      "ident": "documentation_string",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Dokumentation"
          ],
          [
            "en",
            "Documentation"
          ],
          [
            "fr",
            "Documentation"
          ],
          [
            "it",
            "Documentazione"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Dokumentation"
          ],
          [
            "en",
            "Documentation"
          ],
          [
            "fr",
            "Documentation"
          ],
          [
            "it",
            "Documentazione"
          ]
        ]
      },
      "value": {
        "String": ""
      },
      "required": false,
      "access": "Write",
      "gdpr": "A riche text field for general documentation purposes which can contain Text, Images or URLs",
      "settings": {
        "String": {
          "typ": "Markdown"
        }
      }
    },
    {
      "ident": "vet_consultation_reference",
      "system": false,
      "released": true,
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Zu konsultierende TierätztIn"
          ],
          [
            "en",
            "Veterinary consulation"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Zu konsultierende TierätztIn"
          ],
          [
            "en",
            "Veterinary consulation"
          ]
        ]
      },
      "value": {
        "Reference": "ee69600d-fac8-44f3-ad37-e162f52b72bd"
      },
      "required": false,
      "access": "Write",
      "gdpr": "",
      "settings": {
        "Reference": {
          "typ": {
            "RecordTyp": "user"
          }
        }
      }
    }
  ],
  "workflows": [
    {
      "ident": "daycare_done",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege erledigt"
          ],
          [
            "en",
            "Daycare done"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege erledigt Workflow"
          ],
          [
            "en",
            "Daycare done Workflow"
          ]
        ]
      },
      "icon": "message-success",
      "active": false,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    if record.status.to_string() == \"daycare_open\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"set_status_service\", [\"daycare_done\", \"#C2D8C0\"]).await?; //light green\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "daycare_open",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege offen"
          ],
          [
            "en",
            "Daycare open"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege offen Workflow"
          ],
          [
            "en",
            "Daycare open Workflow"
          ]
        ]
      },
      "icon": "heart-2",
      "active": false,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    if record.status.to_string() == \"under_treatment\" {\n        return true;\n    } else if record.status.to_string() == \"daycare_done\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"set_status_service\", [\"daycare_open\", \"#F9DDBE\"]).await?; //light orange\n\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "box_selection_dyn",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Wannen Selection"
          ],
          [
            "en",
            "Box Selection"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Wannen Selection"
          ],
          [
            "en",
            "Box Selection"
          ]
        ]
      },
      "icon": "border",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    false\n}\n\npub async fn main(old, new) {\n    if new.ident.to_string() == \"box_selection_dyn\" && new.value is not bool && old.value.get_selected_single() != new.value.get_selected_single() {\n        let new_sel = new.value.get_selected_single();\n        exo::rpc_model(\"select_box_service\", [new_sel]).await?;\n    }\n    new.value = exo::rpc_model(\"box_selection_dyn\", []).await?[0];\n    new.name = exo::Language::new_en(\"Igel Wanne\");\n    new.access = exo::Access::Write;\n    Ok(new)\n}\n\npub async fn test() {\n    main(exo::Variable::new(\"\", \"\"), exo::Variable::new(\"\", \"\")).await?;\n    Ok(())\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "vet_consultation",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation"
          ],
          [
            "en",
            "Vet Consultation"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation Workflow"
          ],
          [
            "en",
            "Vet Consultation Workflow"
          ]
        ]
      },
      "icon": "electrocardiogram",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    let value = record.get_value(\"vet_consultation_bool\")?;\n\n    if record.status.to_string() == \"under_treatment\" && value == false {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"vet_consultation_service\", []).await?;\n\n    // set in inbox\n    let usr = record.get_value(\"vet_consultation_reference\")?.to_string();\n    exo::rpc_model(\"set_user_inbox_service\", [usr, record.uuid]).await?;\n\n    exo::ui::notification(\"Information\", \"Tierarzt konsultiert\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 8,
      "test_record": "95edbabc-d467-4664-9dc2-74b7859658a3"
    },
    {
      "ident": "enclosure_lent",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen"
          ],
          [
            "en",
            "Enclosure lent"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen Workflow"
          ],
          [
            "en",
            "Enclosure lent Workflow"
          ]
        ]
      },
      "icon": "draw-rectangle",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    let value = record.get_value(\"enclosure_lent_bool\")?;\n\n    if record.status.to_string() == \"released\" && value == false {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"enclosure_lent_service\", []).await?;\n    exo::ui::notification(\"Positive\", \"Gehege ausgeliehen\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 8,
      "test_record": "95edbabc-d467-4664-9dc2-74b7859658a3"
    },
    {
      "ident": "enclosure_back",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege zurück"
          ],
          [
            "en",
            "Enclosure back"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege zurück Workflow"
          ],
          [
            "en",
            "Enclosure back Workflow"
          ]
        ]
      },
      "icon": "draw-rectangle",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    let value = record.get_value(\"enclosure_lent_bool\")?;\n\n    if record.status.to_string() == \"released\" && value == true {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"enclosure_back_service\", []).await?;\n    exo::ui::notification(\"Positive\", \"Gehege zurück genommen\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 8,
      "test_record": "95edbabc-d467-4664-9dc2-74b7859658a3"
    },
    {
      "ident": "released",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Ausgetreten"
          ],
          [
            "en",
            "Released"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Ausgetreten Workflow"
          ],
          [
            "en",
            "Released Workflow"
          ]
        ]
      },
      "icon": "journey-depart",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    if record.status.to_string() == \"under_treatment\" {\n        return true;\n    } else if record.status.to_string() == \"daycare_done\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"set_status_service\", [\"released\", \"#ABE2AB\"]).await?; //green // set in inbox //let usr = record.get_value(\"assigned_user_1\")?.get_reference()?.to_string(); //webapp::rpc_call(\"model\", \"set_user_inbox\", [usr, record.uuid]).await?;\n    exo::rpc_model(\"select_box_service\", [\"\"]).await?;\n    exo::ui::notification(\"Positive\", \"Status zu 'Ausgetreten' geändert\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "add_contact",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Neuer Kontakt erstellen"
          ],
          [
            "en",
            "Add new Contact"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "New Contact Workflow"
          ]
        ]
      },
      "icon": "add-employee",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    return false;\n}\n\npub async fn main() {\n    //for Language Variable\n    //let firstname = exo::Variable::new(\"firstname\", exo::Language::new());\n    //let lastname = exo::Variable::new(\"lastname\", exo::Language::new());\n    let firstname = exo::Variable::new(\"firstname\", \"\");\n    let lastname = exo::Variable::new(\"lastname\", \"\");\n\n    let phone = exo::Variable::new(\"phone\", \"\");\n    firstname.name = exo::Language::new_en(\"Vorname\");\n    lastname.name = exo::Language::new_en(\"Nachname\");\n    phone.name = exo::Language::new_en(\"Telefon\");\n    let result = exo::ui::popup(\"Neuer Kontakt\", \"Neuer Kontakt erfassen\", [firstname, lastname, phone]).await?;\n    if result.0 == false {\n        exo::ui::notification(\"Warning\", \"Kontakt wurde nicht erfasst\", 6000);\n        return Ok(());\n    }\n\n    let vars = result.1;\n    //let contact_firstname = vars[0];\n    //let contact_lastname = vars[1];\n\n    let new_firstname = vars[0].value;\n    let new_lastname = vars[1].value;\n    let new_phone = vars[2].value;\n    exo::rpc_model(\"add_contact_service\", [new_firstname, new_lastname, new_phone]).await?;\n\n    exo::ui::notification(\"Positive\", \"Neuer Kontakt erstellt\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    main().await?;\n    Ok(())\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "registered",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Registered"
          ],
          [
            "de",
            "Registriert"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Registered Workflow"
          ]
        ]
      },
      "icon": "write-new-document",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    if record.status.to_string() == \"new\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"set_status_service\", [\"accepted\", \"#C7D8E7\"]).await?; //lightblue // set in inbox //let usr = record.get_value(Ident::new(\"assigned_user_1\"))?.get_reference()?.to_string(); //exo::rpc_model(\"set_user_inbox_service\", [usr, record.uuid]).await?;\n    exo::ui::notification(\"Positive\", \"Status zu 'in Behandlung' geändert\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "add_drug",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Neues Medikament erstellen"
          ],
          [
            "en",
            "Add new Drug"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "New Drug Workflow"
          ]
        ]
      },
      "icon": "syringe",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    return false;\n}\n\npub async fn main() {\n    //for Language Variable\n    //let firstname = exo::Variable::new(\"firstname\", exo::Language::new());\n    //let lastname = exo::Variable::new(\"lastname\", exo::Language::new());\n    let name = exo::Variable::new(\"name\", \"\");\n    let description = exo::Variable::new(\"description\", \"\");\n\n    name.name = exo::Language::new_en(\"Name\");\n    description.name = exo::Language::new_en(\"Beschreibung / Handelsname\");\n\n    let result = exo::ui::popup(\"Neues Medikament\", \"Neues Medikament erfassen\", [name, description]).await?;\n    if result.0 == false {\n        exo::ui::notification(\"Warning\", \"Medikament wurde nicht erfasst\", 6000);\n        return Ok(());\n    }\n\n    let vars = result.1;\n    //let contact_firstname = vars[0];\n    //let contact_lastname = vars[1];\n\n    let new_name = vars[0].value;\n    let new_description = vars[1].value;\n    exo::rpc_model(\"add_drug_service\", [new_name, new_description]).await?;\n\n    exo::ui::notification(\"Positive\", \"Neues Medikament erfasst\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    main().await?;\n    Ok(())\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "new_record",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "New Record Workflow"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "New Record Workflow"
          ]
        ]
      },
      "icon": "instance",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    false\n}\n\npub async fn main() {\n    exo::rpc_model(\"new_record_service\", []).await?;\n}\n\npub async fn test() {\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "delete_record_workflow",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Löschen"
          ],
          [
            "en",
            "Delete"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Löschen Workflow"
          ],
          [
            "en",
            "Delete Workflow"
          ]
        ]
      },
      "icon": "delete",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    exo::has_right(\"record_delete\")\n}\n\npub async fn main() {\n    let result = exo::ui::popup(\"Igel löschen\", \"Bist du sicher, dass du diesen Datensatz löschen willst?\", []).await?;\n    if result.0 == false {\n        return Ok(());\n    }\n    exo::rpc_model(\"select_box_service\", [\"\"]).await?;\n    exo::rpc_model(\"delete_record_service\", []).await?;\n    exo::ui::notification(\"Positive\", \"Record gelöscht\", 6000);\n    exo::ui::reload();\n    Ok(())\n}\n\npub async fn test() {\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "43b6c9a1-eebb-43c4-89e9-b710a7164ad2"
    },
    {
      "ident": "under_treatment",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Under Treatment"
          ],
          [
            "de",
            "In Behandlung"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Under Treatment Workflow"
          ],
          [
            "de",
            "In Behandlung Workflow"
          ]
        ]
      },
      "icon": "bed",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    if record.status.to_string() == \"registered\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = exo::get_record()?;\n    exo::rpc_model(\"set_status_service\", [\"under_treatment\", \"#91C8F6\"]).await?; //light dark blue\n    exo::ui::notification(\"Positive\", \"Status zu 'in Behandlung' geändert\", 6000);\n    // set in inbox\n    //let usr = record.get_value(Ident::new(\"assigned_user_1\"))?.get_reference()?.to_string();\n    //webapp::rpc_call(\"model\", \"set_user_inbox\", [usr, record.uuid]).await?;\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "dyn_delta_weight",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Delta Weight"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Delta Weight"
          ]
        ]
      },
      "icon": "instance",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    return false;\n}\n\npub async fn main(old, new) {\n    let record = exo::get_record()?;\n    let table = record.get_value(\"daycare_table\")?;\n\n    if table.len() < 2 {\n        return \"keine Daten\";\n    }\n    let last = table.get_value(0, \"weight\")?;\n    let prev = table.get_value(1, \"weight\")?;\n\n    let last = match std::i64::parse(last) {\n        Ok(v) => v,\n        Err(_) => return \"falsche Daten\",\n    };\n    let prev = match std::i64::parse(prev) {\n        Ok(v) => v,\n        Err(_) => return \"falsche Daten\",\n    };\n\n    let res = last - prev;\n    if res > 0 {\n        res = format!(\"+{}\",res);\n    } else {\n        res = format!(\"{}\",res);\n    }\n    //println!(\"Show {}\", res);\n\n    new.value = res;\n    new.name = exo::Language::new_en(\"Δ Gewicht [g]\");\n\n    Ok(new)\n\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main(exo::Variable::new(\"\", \"\"), exo::Variable::new(\"\", \"\")).await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "2d0f5d44-9a8b-4090-acb0-4e63829d9bb4"
    },
    {
      "ident": "vet_consultation_done",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation abgeschlossen"
          ],
          [
            "en",
            "Vet Consultation Done"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation abgeschlossen Workflow"
          ],
          [
            "en",
            "Vet Consultation Done Workflow"
          ]
        ]
      },
      "icon": "electrocardiogram",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = exo::get_record()?;\n    let value = record.get_value(\"vet_consultation_bool\")?;\n\n    if record.status.to_string() == \"under_treatment\" && value == true {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let vars = [exo::Variable::new(\"bemerkung\", \"\")];\n\n    //let vars = [exo::Variable::new(\"text\", \"\"), exo::vs::StringSettings(\"multiline\", true)];\n    //let vars = [exo::Variable::new(\"text\", \"\"), exo::vs::VariableSettings::String(\"multiline\", true)];\n\n    let result = exo::ui::popup(\"Vet Konsultation abschliessen?\", \"Sol die Tierarzt Konsultation abgeschlossen werden? Bitte Bemerkung erfassen\", vars).await?;\n    let note = result.1;\n    let note = note[0].value;\n\n    let record = exo::get_record()?;\n    //exo::rpc_model(\"vet_consultation_done_service\", [note]).await?;\n    let result = exo::rpc_model(\"vet_consultation_done_service\", [note]).await?;\n\n    // remove from inbox\n    let usr = record.get_value(\"vet_consultation_reference\")?.to_string();\n    exo::rpc_model(\"remove_user_inbox_service\", [usr, record.uuid]).await?;\n\n    exo::ui::notification(\"Positive\", \"Konsultation abgeschlossen\", 6000);\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow",
      "focus": "Model",
      "trigger": "None",
      "order": 8,
      "test_record": "95edbabc-d467-4664-9dc2-74b7859658a3"
    }
  ],
  "services": [
    {
      "ident": "set_user_inbox_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set User Inbox Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set User Inbox Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(user, rec_uuid) {\n    exo::db::add_inbox(user, rec_uuid).await?;\n    Ok(true)\n}\n\npub async fn test() {\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "remove_user_inbox_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set User Inbox Service"
          ],
          [
            "de",
            "Remove User Inbox Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set User Inbox Service"
          ],
          [
            "de",
            "Remove User Inbox Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(user, rec_uuid) {\n    exo::db::remove_inbox(user, rec_uuid).await?;\n    Ok(true)\n}\n\npub async fn test() {\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "set_status_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set Status Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set Status Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(status, color) {\n    let record = exo::get_record()?;\n    //set actual date in status 'released' for variable 'calendar_end'\n    //if record.status.to_string() == \"released\" {\n    if status == \"released\" {\n        exo::db::update_record_value(record.uuid, \"status\", exo::Ident::new(status)).await?;\n        exo::db::update_record_value(record.uuid, \"highlight_color\", exo::Color::new(color)).await?;\n        exo::db::update_record_value(record.uuid, \"calendar_end\", exo::DateTime::new()).await?;\n    }\n    if status == \"under_treatment\" {\n        exo::db::update_record_value(record.uuid, \"status\", exo::Ident::new(status)).await?;\n        exo::db::update_record_value(record.uuid, \"highlight_color\", exo::Color::new(color)).await?;\n        exo::db::update_record_value(record.uuid, \"calendar_start\", exo::DateTime::new()).await?;\n    }\n    exo::db::update_record_value(record.uuid, \"status\", exo::Ident::new(status)).await?;\n    exo::db::update_record_value(record.uuid, \"highlight_color\", exo::Color::new(color)).await?;\n    Ok(true)\n}\n\npub async fn test() {\n    main(\"new\", \"\").await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "delete_record_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Delete Record Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Delete Record Service"
          ]
        ]
      },
      "icon": "delete",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n    exo::db::delete_record(record.uuid).await;\n}\n\npub async fn test() {\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "new_record_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "New Record Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "New Record Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n    let lang_name = exo::Language::new();\n    let lang_description = exo::Language::new();\n    //lang.set(\"de\", record.ident.to_string());\n    lang_name.set(\"de\", \"Igel \");\n    lang_description.set(\"de\", \"Patientendossier \");\n    exo::db::update_record_value(record.uuid, \"name\", lang_name).await?;\n    exo::db::update_record_value(record.uuid, \"description\", lang_description).await?;\n    Ok(true)\n}\n\npub async fn test() {\n    main().await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "00000000-0000-0000-0000-000000000000"
    },
    {
      "ident": "enclosure_back_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege zurück Service"
          ],
          [
            "en",
            "Enclosure back Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege zurück Service"
          ],
          [
            "en",
            "Enclosure back Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n    exo::db::update_record_value(record.uuid, \"enclosure_lent_bool\", false).await?;\n    Ok(true)\n}\n\npub async fn test() {\n    //main(\"new\", \"\").await?;\n    main().await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "select_box_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Select Box"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Select Box Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(box_ident) {\n    let record = exo::get_record()?;\n    let query = exo::SqlQuery::new().model(\"animal_box\");\n    let records = exo::db::exec_sql(query).await?;\n    for box in records {\n        let children = box.children;\n        if is_child(children, record.uuid) {\n            let table = exo::Table::new();\n            exo::db::update_record_value(box.uuid, \"children\", table).await?;\n        }\n    }\n\n    let query = exo::SqlQuery::new().model(\"animal_box\").check(\"ident\", \"==\", box_ident);\n    let records = exo::db::exec_sql(query).await?;\n    if records.len() == 0 {\n        return Ok(());\n    }\n    let box = records[0];\n    let table = exo::Table::new();\n\n    table.set_value(0, \"children\", exo::Reference::try_from(record.uuid)?);\n    exo::db::update_record_value(box.uuid, \"children\", table).await?;\n    Ok(())\n}\n\npub async fn test() {\n    main(\"animal_box_0\").await?;\n    Ok(())\n}\n\nfn is_child(children, uuid) {\n    for i in 0..children.len() {\n        if children.get_value(i, \"children\").map(|c| c.to_string()) == Some(uuid) {\n            return true;\n        }\n    }\n    false\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "box_selection_dyn",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Box Selection Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Box Selection Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n    let sel = exo::Selection::new();\n    let boxes = exo::db::exec_sql(\"SELECT * FROM animal_box;\").await?;\n    for box in boxes {\n        if box.children.len() == 0 {\n            sel.insert(box.ident.to_string(), box.name);\n        } else {\n            for i in 0..box.children.len() {\n                let igel = box.children.get_value(i, \"children\")?.to_string();\n                if igel == record.uuid {\n                    sel.insert(box.ident.to_string(), box.name);\n                    sel.set_selected_single(box.ident.to_string());\n                }\n            }\n        }\n    }\n    sel.insert(\"\", exo::Language::new_en(\"\"));\n    //println!(\"{:?}\",sel);\n    Ok(sel)\n}\n\npub async fn test() {\n    main().await?;\n    Ok(())\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "enclosure_lent_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen Service"
          ],
          [
            "en",
            "Enclosure lent Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Gehege ausgeliehen Service"
          ],
          [
            "en",
            "Enclosure lent Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n    //exo::db::update_record_value(record.uuid, \"enclosure_lent_bool\", \"true\").await?;\n    //exo::db::update_record_value(record.uuid, \"enclosure_lent_bool\", exo::Variable::new(\"Bool\", \"true\")).await?;\n    exo::db::update_record_value(record.uuid, \"enclosure_lent_bool\", true).await?;\n\n\n    Ok(true)\n}\n\npub async fn test() {\n    //main(\"new\", \"\").await?;\n    main().await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "add_drug_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Add Drug Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Add Drug Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(new_name, new_description) {\n    let model = exo::db::get_model(\"drugs\").await?;\n    let record = model.create_record(\"\", \"1\", new_name, new_description)?;\n    let db_record = exo::db::insert_record(record).await?;\n    Ok(true)\n}\n\npub async fn test() {\n    main(\"\", \"\", \"\").await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "add_contact_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Add Contact Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "en",
            "Set User Inbox Service"
          ],
          [
            "de",
            "Add Contact Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(new_firstname, new_lastname, new_phone) {\n    let model = exo::db::get_model(\"contact\").await?;\n    let fullname = new_firstname + \" \" + new_lastname;\n    let record = model.create_record(\"\", \"1\", fullname, new_phone)?;\n    let db_record = exo::db::insert_record(record).await?;\n\n    exo::db::update_record_value(exo::get_record()?.uuid, \"finder_reference\", exo::Reference::try_from(db_record.uuid)?).await?;\n    exo::db::update_record_value(record.uuid, \"contact_firstname\", new_firstname).await;\n    exo::db::update_record_value(record.uuid, \"contact_lastname\", new_lastname).await;\n    exo::db::update_record_value(record.uuid, \"contact_phone_1\", new_phone).await;\n\n    Ok(true)\n}\n\npub async fn test() {\n    //main(\"max\", \"mueller\").await?;\n    main(\"\", \"\", \"\").await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "vet_consultation_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation Service"
          ],
          [
            "en",
            "Vet Consultation Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation Service"
          ],
          [
            "en",
            "Vet Consultation Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main() {\n    let record = exo::get_record()?;\n\n    //set vet consultation bool\n    exo::db::update_record_value(record.uuid, \"vet_consultation_bool\", true).await?;\n\n    //set vet consultation color\n    exo::db::update_record_value(record.uuid, \"highlight_color\", exo::Color::new(\"#daddff\")).await?;\n\n    //Reference to right UUID (animal_record_access)\n    exo::db::update_record_value(record.uuid, \"access_right\", exo::Reference::try_from(\"d3341201-75e3-4e64-8a4f-d22fbfa51bac\")?).await?;\n    Ok(true)\n}\n\npub async fn test() {\n    //main(\"new\", \"\").await?;\n    main().await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "a6393dcf-bdae-4104-978d-3d4db9c6dfc0"
    },
    {
      "ident": "vet_consultation_done_service",
      "name": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation Abgeschlossen Service"
          ],
          [
            "en",
            "Vet Consultation Done Service"
          ]
        ]
      },
      "description": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tierarzt Konsultation Abgeschlossen Service"
          ],
          [
            "en",
            "Vet Consultation Done Service"
          ]
        ]
      },
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(note) {\n    let user = exo::get_user();\n    let record = exo::get_record()?;\n\n    exo::db::update_record_value(record.uuid, \"vet_consultation_bool\", false).await?;\n\n    //Reference to right UUID (vet_consultation)\n    exo::db::update_record_value(record.uuid, \"access_right\", exo::Reference::try_from(\"79c5c0c7-784b-49a4-9387-14fa9d0fec92\")?).await?;\n\n    //set under treatment color\n    exo::db::update_record_value(record.uuid, \"highlight_color\", exo::Color::new(\"#91C8F6\")).await?;\n\n    // add a row in daycare table\n    let row_text = \"Tierarztkonsultation abgeschlossen: \" + note;\n    let table = record.get_value(\"daycare_table\")?;\n    let row = table.len();\n    table.set_value(row, \"date\", exo::DateTime::new());\n    table.set_value(row, \"remark\", row_text);\n    exo::db::update_record_value(record.uuid, \"daycare_table\", table).await?;\n\n    // Remove from user Inbox\n    exo::db::remove_inbox(user.uuid, record.uuid).await?;\n\n    Ok(true)\n}\n\npub async fn test() {\n    //main(\"new\", \"\").await?;\n    main().await?;\n}\n",
      "typ": "Service",
      "focus": "Model",
      "trigger": "None",
      "order": 0,
      "test_record": "5c6b7b25-7d2e-4882-af1e-ad573dce4b3b"
    }
  ],
  "record_status": {
    "typ": "selection",
    "selected": [
      "registered"
    ],
    "options": {
      "registered": {
        "typ": "language",
        "langs": [
          [
            "de",
            "registriert"
          ],
          [
            "en",
            "registered"
          ]
        ]
      },
      "under_treatment": {
        "typ": "language",
        "langs": [
          [
            "de",
            "in Behandlung"
          ],
          [
            "en",
            "under treatment"
          ]
        ]
      },
      "daycare_done": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege abgeschlossen"
          ],
          [
            "en",
            "daycare done"
          ]
        ]
      },
      "daycare_open": {
        "typ": "language",
        "langs": [
          [
            "de",
            "Tagespflege offen"
          ],
          [
            "en",
            "daycare open"
          ]
        ]
      },
      "released": {
        "typ": "language",
        "langs": [
          [
            "de",
            "ausgetreten"
          ],
          [
            "en",
            "released"
          ]
        ]
      }
    }
  },
  "record_right": "d3341201-75e3-4e64-8a4f-d22fbfa51bac",
  "system": false,
  "children": {
    "ident": "children",
    "system": true,
    "released": false,
    "name": {
      "typ": "language",
      "langs": [
        [
          "en",
          "Children"
        ]
      ]
    },
    "description": {
      "typ": "language",
      "langs": [
        [
          "en",
          "Children Table"
        ]
      ]
    },
    "value": {
      "Table": {
        "typ": "table",
        "entries": []
      }
    },
    "required": true,
    "access": "Change",
    "gdpr": "",
    "settings": {
      "Table": {
        "columns": [
          {
            "ident": "children",
            "position": 0,
            "name": {
              "typ": "language",
              "langs": [
                [
                  "en",
                  "Children"
                ]
              ]
            },
            "read_only": false,
            "value": {
              "Reference": "00000000-0000-0000-0000-000000000000"
            },
            "setting": {
              "Reference": {
                "typ": {
                  "RecordTyp": "igel_record"
                }
              }
            }
          }
        ],
        "add_row_only": false,
        "add_at_bottom": false
      }
    }
  }
}